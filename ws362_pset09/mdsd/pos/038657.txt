This volume should be prescribed reading for all IT professionals. Everybody but everybody has an opinion on the merits or otherwise of Configuration Management, but a better understanding would help us all. People not actively part of Configuration Management [CM] will then say, "Yes, it is both more important and more involved that I had thought hitherto".

There are five parts to the book; what is CM, the data required for CM, roles within CM, CM in practice and improving CM. The last three are probably the more interesting, but without the first two, it is talking into a vacuum. Throughout, there is emphasis that CM is a tool to be used, and should not become a priority in its own right. Good CM should provide benefits; unfortunately, those who receive the benefits are not always those who have paid the cost (in terms of extra effort and/or information that is required of them).

In the first two sections, there is a lot of material that seems repetitive. An example of this is material regarding the naming of configuration items, deliveries, etc. However, this is also an advantage, as chapters or parts of chapters can be read in isolation. I particularly like the use of the same examples in various parts of the text. When referred to, there is usually a diagram, and this is in text, rather than referring to another page in another chapter. Table 15-1 is the same as table 6-1. In books where the diagram is NOT repeated, but the reader referred back to re-read the other section, they never do!

Fundamental questions about what to include under the control of CM are addressed (although not always prescriptively answered). What should be included in the CM system? Do you include program source and object code, just source code, or source and the compiler? If the compiler is not included, it may not be possible to amend code for old platforms. Similarly, all tools should be potentially under CM control. Otherwise, a document written is an obscure word processor format may be available in the future, but not the means to even read it easily?

There is discussion about the need to capture both physical objects (PC's, memory boards) AND electronic objects. In this case, CM can partly overlap with asset management; it is other ways very different from the latter. However, the author stresses the need to know the boundaries of CM; the defining of a software delivery is not the responsibility of the CM team. Similarly, the use of variants is a design decision, not decided or dictated by those in CM. The latter is essentially an administrative task, concentrating on the four cornerstones; identification, storage, change control and status reporting. 

The challenges of these four categories are brought out in the latter parts. Most people would agree that documents need to come under CM control at some point. The storage of documents can present challenges, particularly if a master document has many composite parts. There are also needs to take account of cross-references (which may be different to the formal linkages that are reported by the CM tool). Much information can be gathered from the information available through CM. A well-made point is that there is no point in gathering information if no one is going to use it.

Anne Mette's first language is not English, and sometimes this shows. It is difficult to define how this is the case, but sometimes the use of language can be an advantage. Some things are described as being `an inspiration', not an expression that many would necessarily have chosen. That comes across well. However, do not confuse the style with the substance. The latter is the most important, and it is a very good standard.

How do fill a book of 350 pages on CM? Several items are covered that are not exactly mainstream CM, but are very relevant and appropriate to the discussion. The section on `people roles' comes over well, and is part of the selling of CM as a discipline. This section draws on the work of Dr Meredith Belbin, and his nine team roles, applying this specifically to CM.

The last comments are reserved for the final part, allowing the CM process to be part of the overall Process Improvement drive within an organisation. If there is no CM process in place (not to be confused with there being no CM tool in place), it can be difficult to know where to start. An apt comparison is about a centipede thinking about how to walk - too much thought makes for a tangled heap in a ditch, instead of just doing it. The author says go for quick cheap wins, and if possible base any initial procedures on existing practices. This will significantly enhance the chances of success.

CM is a big topic. This volume brings out many of the issues that are involved, and gives guidelines on overcoming some specific challenges. There are practical examples, but these are more in the line of serving suggestions, rather than a fixed menu.

Peter Morgan, Bath, UK (morganp@supanet.com
