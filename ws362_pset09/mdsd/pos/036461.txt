Whatever your programming methodology, if you are involved in the design or reengineering of a project, then use cases are a vital starting point. Cockburn explains how these can serve as an important part of the boundary between the programmers and the non-programmer users and management. Given that the two (or three) groups often have quite different backgrounds, you can see the need for accurate and comprehensive examples.

Hence Cockburn explains how to extract these from users. And to describe the cases in a graphical manner that is meaningful to many. UML is used, especially for the programmers, who are more likely to be familiar with it than the others. But the text also pragmatically does not confine itself to strictly UML. (Unlike books devoted to UML, rather than use cases.) There are plenty of examples given where you can draw general purpose diagrams. Provided, of course, that you can still draw all the key cases
