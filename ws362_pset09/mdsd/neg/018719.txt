For one thing, if you are interested in this book, chances are that you are taking a class in computer architecture and are required to buy it.  If that is the case, all of the high-brow comments won't do you any good.  You are forced to suffer through this monstrosity.  That was my position.  Fortunately you will be able to get a more modern edition with all the thousands of typos and errata fixed, or so you hope.  Problems at the end of the chapter, you ask?  Get that blade ready to cut your wrists.  Yea, it's simple math.  You'll never use anything more than multiplication and division here, but I submit that it is almost impossible to answer some of these questions without first knowing what the answer is.  The examples in the chapter do next to nothing to prepare you for the exercises, and later in the book, the questions get so complex that there must be 25 variables to consider.  If the author was trying to trick you, he could throw all sorts of extra things just to trip you up.  You would dutifully find something to do with them.  A professor that tries to teach this entire book in a semester is a maniac, but they all try.  Also they may try to go out of order on you with the chapters.  Beware.  Worse still is trying to go in order.  Chapter 4 alone will stop you cold.  I honestly think you can devote an entire semester just to some of these individual chapters.  The book assumes you are very smart.  You need to be someone with both a degree in EE, CS, and who has work experience dealing with hardware.  My bottom line is that I am trying to warn you about what you are getting yourself into with this book.  It is no easy read, no quick fix, no Bible of computer architeture that would allow you to use it as reference material in your job.  If you were to look something up, it would take you a day and a half just to remember back to what the hell they were talking about.  Somebody needs to do a better job than these geniuses
