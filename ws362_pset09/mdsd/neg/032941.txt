The book is fairly good. Covers the compiler theory pretty well, and includes a good coverage of advanced topics at the end. I  gave it a low rating because the project really kills this book. The first 12 chapters are a walk-through gide for building a compiler for the tiger language (which the author defined). The tiger language itself is weird at first since it doesn't have any statements. It only has expressions. Besides, the language is not thoroughly documented in the book and leaves a lot of  things open for the implementor. At any rate, after building the first few chapters (about the time you've done the parse tree) the book starts to get confusing, dedicating more and  more space to describe the bits and pieces of the project  (which I read somewhere was ported to C from ML). All in all it's a good reference book, but it's really confusing if this is your primary text. I'd recommend it as a secondary textbook. And I wouldn't recommend tiger for a compiler project, better use decaf (search google)
