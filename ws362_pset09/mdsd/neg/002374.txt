It's important for buyers and readers to understand, first and foremost, that this is a text book.  You can read in the prelude that this book was the result of teaching in the classroom.  Because of this certain aspects of the book are useful to new systems programmers, namely the heavy emphasis on examples and excercises.  However, the examples are so large and the is text built around them that you don't get a wide enough understanding of the topic.  If your the sort of person who can actually read from cover to coder without jumping around this might work out fine, but for most of us we don't want to read full chapters at a time.  

Because of this, this book doesn't cut it as a reference.  You read it, you put it on yourself and you find a good reference to put on your desk (Teer or Stevens').  

Topics like POSIX Threading are great to have, but it's too big a topic for most systems programming books and pushes out alot of good information in order to facility these larger topics.  This really kills the book.  Don't think that you can buy this book and then avoid buying a POSIX Threads book; you'd be far better off to buy a more thurough programming book (Teer or Stevens') and then suppliment it with a good solid PThreads book.

One thing that really really bugs me about this book is that it does not dissuse UNIX memory in any detail.  There is a small section that explains stacks and heaps, but outside of that there is little memory discussion at all.  Topics such as secure programming are scarcely touched, despite being an independant topic.

If you want a good ol' college textbook, complete with examples that aren't all that interesting and lots of "Real World(tm)" discussion then by all means nab this book.  But if your a real systems programmer or are trying to become one, do yourself a favor and buy a real systems programming book (Teer or Stevens') and leave this book on the shelf.  I bought this book about 6 months ago and already it's sitting on my bookshelf of unused texts.  I'd suggest to anyone looking for a Systems Programming text to strongly look at "Solaris Systems Programming" for a far better and comprehensive book
